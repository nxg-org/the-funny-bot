import type { Bot } from "mineflayer";
import type { Entity } from "prismarine-entity";
import type { Vec3 } from "vec3";
import { goals, Movements } from "mineflayer-pathfinder";
export declare class MovementFunctions {
    private bot;
    goalArray: goals.GoalCompositeAll;
    constructor(bot: Bot);
    set movements(movements: Movements);
    get movements(): Movements;
    /**
     * Fuckin' mineflayer-pathfinder still doesn't have typings.
     * Pain in my goddamn ass.
     * @returns have the goal changed
     */
    addGoal(goal: any): boolean;
    /**
     * Sets current goal and clears all others.
     * @param goal any type of mineflayer-pathfinder goal.
     * @returns have the goal changed
     */
    setOnlyGoal(goal: any, dynamic?: boolean): boolean;
    /**
     * Reset all goals inside the goal array to none.
     * @returns have the goals changed
     */
    stop(): boolean;
    /**
     * Retreat from current entity.
     * @param entity Prismarine-Entity Entity
     * @returns have the goals changed.
     */
    retreatFromEntity(entity: Entity, distance: number, dynamic?: boolean): boolean;
    /**
     * Follow entity with a specific range. Will not approach past a certain distance either.
     * @param entity Prismarine-Entity Entity
     * @returns have the goals changed
     */
    followEntityWithRespectRange(entity: Entity, followDistance: number, invertDistance?: number): boolean;
    forceLook(yaw: number, pitch: number, update?: boolean, onGround?: boolean): void;
    forceLookAt(pos: Vec3, update?: boolean, onGround?: boolean): void;
    lazyTeleport(endPos: Vec3): void;
}
